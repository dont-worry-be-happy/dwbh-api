#
# Copyright (C) 2019 Kaleidos Open Source SL
#
# This file is part of Don't Worry Be Happy (DWBH).
# DWBH is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# DWBH is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with DWBH.  If not, see <https://www.gnu.org/licenses/>
#

scalar Time
scalar Date
scalar DateTime
scalar DayOfWeek

directive @anonymousAllowed on FIELD_DEFINITION | OBJECT

type Group {
    id: ID
    visibleMemberList: Boolean
    anonymousVote: Boolean
    name: String
    members: [User]
    votingDays: [DayOfWeek]
    votingTime: Time
    isCurrentUserAdmin: Boolean
    votings(startDate: DateTime!, endDate: DateTime!): [Voting]
}

type UserProfile {
    id: ID
    name: String
    email: String
    groups: [Group]
}

type User {
    id: ID
    name: String
}

type Voting {
    id: ID,
    group: Group,
    createdAt: DateTime
    createdBy: User
    average: Int
    votes: [Vote]
}

type Vote {
    id: ID
    score: Int
    comment: String
    voting: Voting
    createdAt: DateTime
    createdBy: User
}

# Contains token and user information
type Login {
    profile: UserProfile
    token: String
}

# registered queries
type Query {
    # get groups of the current user
    listMyGroups: [Group]

    # get group by its id
    getGroup(id: ID!): Group

    # get voting by its id
    getVoting(id: ID!): Voting

    # get user by its id
    getUser(id: ID!): User

    # log in
    login(email: String!, password: String!): Login @anonymousAllowed

    # get the current user's profile
    myProfile: UserProfile
}

# registered mutations
type Mutation {
    # creates a new voting slot
    createVoting(groupId: ID): Voting

    # creates a user vote
    createVote(votingId: ID!, score: Int!, comment: String, anonymous: Boolean = false): Vote

    # creates a group
    createGroup(name: String!, visibleMemberList: Boolean!, anonymousVote: Boolean!, votingTime: Time!, votingDays: [DayOfWeek]!): Group

    # add an user to a group
    addUserToGroup(email: String!, groupId: ID!): Boolean
}
